<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EQAACxEBf2RfkQAABMhJREFUeF7tm9uK7UQQhgfBfSGo4IN51lfycKEP4QF8Ic/e7M0WLwRBvVbrg1mw
        CH+lqtOVtGh98MGwpv9OdWZNslaSemiapmmapmmapmmapmmapmmapgl4yXzX/Mr87dFPzSfmCIx/3/zS
        /Nb881F+5jV+NzrnPVV1Vs0zxX0R7KS/hZ+YWd42fzLVPPf+aL5lZqmqs3q9h3nR/ND0irj3VzPiBfNj
        U+X3/Mgk61FVZ/V6p6EYtXHPiCM7/yZ/BI+qOqvXO80vptqw5x4cdlRmxDdNRVWdlest4WdTbdjTgxNW
        5pgf+YPJYWJLVZ1V85RR9S/JJxo1Hp+a75gvP8pJl09Caixyctzynz0E3U5K/Gvy7uBTATtLFYMefKxU
        49n5r5lbeO2ZqTKfm1uq6qya53RUMejxnanGsziP90yV4b8ji8rjKGoOXIYqBj1+N9V4Djker5gqw1xZ
        VB5HUXPgMlQx6KHGYoTKYBaVxVHUHLgMVQx6qLEYoTKYRWVxFDUHLkMVgx5qLEaoDGZRWRxFzYHLUMWg
        hxqLESqDWVQWR1Fz4DJUMeihxmKEymAWlcVR1By4DFUMeqixGKEymEVlcRQ1By5DFYMeaixGqAxmUVkc
        Rc2By1DFoIcaixEqg1lUFkdRc+AyVDHoceSL2KumyvQXMUMVgx7epYi9u13eNZi+FGGoYtDjC1ONZ2d6
        F+O+N1XmMzOLyuMoag5chioGPfYuR3PVkwtvXPtB3vnezkd1OdpD5XEUNQcuQxWDHlzm5WaKyozITZ2R
        pxHUHDiKmgOXoYrBPTjeq0zWv8zXzRHUPDiKmgOXoYrBiJmb8h+Yo6h5cBQ1By7jubkthtcieLSEpxu2
        2T1553OXau+xFI+jdW6pmqcMde905B3K0w2ZcwIn4zfMo8zWeaNqnjI4EVIU7wLk59FH9Tgx84mGe7zf
        mH88+rXJR01+x5gZKuqEqnmapmmapmmapmkOwReQM3q7Znuxqnq5zlpfCdW9XbO9WNW9XGf1rk1T3dt1
        ewzc22n3ql6s2fyW6vWVU93bxc5TYz23zOa3nNW7VsIZvV2zvViVvVxn9q5Nw8nmjN6u2V6sql6us9ZX
        xt7N9Jnern/LIeis9ZVxVm/X7SR6tBdrNn/jrPWVcXVvl8phFpVFj1W9a2mu7u1SOcyisuhx9fqGURvC
        CJXBCJXBLCqLHmosRqgMlqM2ghEqgxEqg1lUFj3UWIxQGSxHbQQjVAYjVAazqCx6qLEYoTJYjtoIRqgM
        RqgMZlFZ9FBjMUJlsBy1EYxQGYxQGcyisuihxmKEymA5aiMYoTIYoTKYRWXRQ43FCJXBctRGMEJlMEJl
        MIvKoocaixEqg+WojWCEymCEymAWlUUPNRYjVAbLOfJFZaa3S+Uwi8qix9XrG+bq3i6Vwywqix6retfS
        XN3bpXKYRWXRY1XvWpq9y7Vn9HapHGZRWfS4en3DcNn3yt4ulcUsKoseV6/vEBwP1UazjvR2qTxmUVnc
        48r1Heaq3i6VxywqixFXre8wPHpxRW8X3SfbeXgty9H8Veub5uzeLnWvd+QdNpu/qndtCk5cnPHP6O3i
        RMZO5F2L/DxycpvNw5nra5qmaZqmaZqmaZqmaZqmaZrmf8HDwz+m+PL9xjevDAAAAABJRU5ErkJggg==
</value>
  </data>
</root>